### --------------------------------------------------------------------------------
### SPRING PROFILE
### --------------------------------------------------------------------------------
### If this setting is activation, auto read "application-{spring.profile.active}.properties" file in classpath
spring.profiles.active=@spring.profiles.active@

# Message digest algorithm using EgovPasswordEncoder..
crypto.password.algorithm=SHA-256

# hashed password (ex: egovframe (SHA-256) => gdyYs/IZqY86VcWhT8emCYfqY1ahw2vtLG+/FzNqtrQ=)
crypto.hashed.password=gdyYs/IZqY86VcWhT8emCYfqY1ahw2vtLG+/FzNqtrQ=

### --------------------------------------------------------------------------------
### JWT
### --------------------------------------------------------------------------------
### grant type
### --------------------------------------------------------------------------------
### Basic : 사용자 아이디 암호를 Base64 인코딩한 값을 토큰으로 사용 (RFC 7617)
### Bearer : jwt 혹은 OAuth에 대한 토큰을 사용 (RFC 6750)
### Digest : 서버에서 난수 데이터 문자열을 클라이언트에 보낸다. 클라이언트는 사용자 정보와 nonce 를 포함해서 해시값을 사용하여 응답한다 (RFC 7616)
### HOBA : 전자서명 기반 인증 (RFC 7486)
### Mutual : 암호를 이용한 클라이언트 서버 상호 인증 (draft-ietf-httpauth-mutual)
### AWS4-HMAC-SHA256 : AWS 전자서명기반인증 (https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html)
### --------------------------------------------------------------------------------
jwt.access.token.secret=devframe-access-token
jwt.refresh.token.secret=devframe-refresh-token
jwt.grant.type=Bearer
jwt.refresh.token.url=/user/re-authentication